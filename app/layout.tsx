import type {Metadata} from 'next'
import {Inter} from 'next/font/google'
import './_assets/styles/globals.scss'
import {MainProvider} from '_providers/MainProvider'
import {auth} from '../auth'
import {UserRole} from './_services/auth/UserRole.enum'
import {Header} from './_components/Header'
import {Body} from './_components/Body'
import {AdminLayout} from './_components/layouts/admin/AdminLayout'
import {EmployeeLayout} from './_components/layouts/employee/EmployeeLayout'
import {ClientLayout} from './_components/layouts/client/ClientLayout'
import {LinkData, LoginHeader} from './_components/LoginHeader'
import React from 'react'

const inter = Inter({subsets: ['latin']})
const rightLinks: LinkData[] = [
	{title: 'Вход', href: '/login'},
	{title: 'Регистрация', href: '/sign_up'}
]
export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app'
}

export default async function RootLayout({children}: Readonly<{children: React.ReactNode}>) {

	const session = await auth()

	if (!session?.user) {
		return (
			<html suppressHydrationWarning={true} lang="en">
			<body className={inter.className}>
			<MainProvider>
				<LoginHeader rightLinks={rightLinks} />
				{children}
			</MainProvider>
			</body>
			</html>
		)
	}

	switch (session?.user.role) {
		case UserRole.ADMIN:
			return (
				<html suppressHydrationWarning={true} lang="en">
				<body className={inter.className}>
				<MainProvider>
					<Header />
					<Body>
						<AdminLayout>{children}</AdminLayout>
					</Body>
				</MainProvider>
				</body>
				</html>
			)
		case UserRole.EMPLOYEE:
			return (
				<html suppressHydrationWarning={true} lang="en">
				<body className={inter.className}>
				<MainProvider>
					<Header />
					<Body>
						<EmployeeLayout>{children}</EmployeeLayout>
					</Body>
				</MainProvider>
				</body>
				</html>
			)
		case UserRole.CLIENT:
			return (
				<html suppressHydrationWarning={true} lang="en">
				<body className={inter.className}>
				<MainProvider>
					<Header />
					<Body>
						<ClientLayout>{children}</ClientLayout>
					</Body>
				</MainProvider>
				</body>
				</html>
			)
		default:
			return null
	}
}
